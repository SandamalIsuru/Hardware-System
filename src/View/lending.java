/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Common.CommonUtil;
import Controller.customerController;
import static Controller.customerController.getCustAddress;
import static Controller.customerController.getCustID;
import Controller.itemController;
import static Controller.itemController.getQtyOnHand;
import Controller.lendDetailController;
import Model.Customer;
import Model.Item;
import Model.lendDetail;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static Controller.itemController.getItemDetailsByName;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Isuru SanDamal
 */
public class lending extends javax.swing.JInternalFrame {

    int rowCount = 0;
    double total = 0;
    private SimpleDateFormat dateFormat;
    private Date date;
    Map<String, Integer> itemQtyList = new HashMap<String, Integer>(); //To keep QTY of all items
    CommonUtil commonUtil = null;

    /**
     * Creates new form borrowing
     */
    public lending() {
        initComponents();
        this.getRootPane().setDefaultButton(addbut);
        commonUtil = new CommonUtil();
        itemCode.setEditable(false);

        date = new Date();
        dateFormat = new SimpleDateFormat("E yyyy-MM-dd");
        dateText.setText(dateFormat.format(date));

        try {
            fillCustomerComboBox();
            fillItemComboBox();
            autoCompletion1.enable(custNameCombo);
            autoCompletion1.enable(itemCombo);
            custAddressText.setText(fillCustAddress(custNameCombo));
            custIDText.setText(fillCustID(custNameCombo));
            itemCode.setText(fillItemCode(itemCombo));
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(lending.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(lending.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        autoCompletion1 = new Common.AutoCompletion();
        autoCompletion2 = new Common.AutoCompletion();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dateText = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        addCustBut = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        custNameCombo = new javax.swing.JComboBox();
        custAddressText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        custIDText = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        discount = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        itemCombo = new javax.swing.JComboBox();
        addbut = new javax.swing.JButton();
        unitPriceText = new javax.swing.JTextField();
        qtyText = new javax.swing.JTextField();
        itemCode = new javax.swing.JTextField();
        removebut = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        totalText = new javax.swing.JTextField();
        cancelbut = new javax.swing.JButton();
        savebut = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("lend Items");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Date");

        dateText.setEditable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Customer Details"));

        addCustBut.setText("Add Customer");
        addCustBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustButActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Address");

        custNameCombo.setEditable(true);
        custNameCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Customer" }));
        custNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custNameComboActionPerformed(evt);
            }
        });

        custAddressText.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Code");

        custIDText.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(custNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(custIDText)
                        .addGap(18, 18, 18)
                        .addComponent(addCustBut))
                    .addComponent(custAddressText))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(custNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCustBut)
                    .addComponent(jLabel5)
                    .addComponent(custIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(custAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Details"));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Item code");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Discount");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Unit Price");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Item");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Quantity");

        itemCombo.setEditable(true);
        itemCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Item" }));
        itemCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemComboActionPerformed(evt);
            }
        });

        addbut.setText("Add");
        addbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbutActionPerformed(evt);
            }
        });

        qtyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTextActionPerformed(evt);
            }
        });

        removebut.setText("Remove");
        removebut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removebutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(itemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel8)
                        .addGap(29, 29, 29)
                        .addComponent(itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unitPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addbut)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(removebut)))
                        .addGap(18, 18, 18))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(itemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(unitPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbut)
                    .addComponent(removebut)))
        );

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Description", "QTY", "Unit Price", "Discount", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(itemTable);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Total");

        cancelbut.setText("Cancel");
        cancelbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbutActionPerformed(evt);
            }
        });

        savebut.setText("Save");
        savebut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(savebut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cancelbut, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelbut)
                    .addComponent(savebut))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbutActionPerformed
        if (itemCode.getText().isEmpty() || unitPriceText.getText().isEmpty() || qtyText.getText().isEmpty()) {
            JOptionPane.showMessageDialog(lending.this, "Please Fill All Fields...", "Warnning", JOptionPane.WARNING_MESSAGE);
        } else {
            String description = (itemCombo.getSelectedItem()).toString();
            String itemCodeStr = itemCode.getText();
            String unitPrice = unitPriceText.getText();
            String qty = qtyText.getText();
            int disc = (Integer) discount.getValue();
            double up = Double.parseDouble(unitPrice);
            double qtty = Double.parseDouble(qty);
            double ammount = ((up * qtty) - ((up * qtty) * (disc / 100.0)));
            int dbQty = itemQtyList.get(itemCodeStr);
            if (dbQty < Integer.parseInt(qty)) {
                JOptionPane.showMessageDialog(lending.this, "Stock Out....Remain " + dbQty + " Items", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                total += ammount;
                Object[] rowData = {itemCodeStr, description, qty, unitPrice, Integer.toString(disc), Double.toString(ammount)};
                ((DefaultTableModel) itemTable.getModel()).addRow(rowData);
                itemQtyList.put(itemCodeStr, dbQty - Integer.parseInt(qty));
                qtyText.setText("");
                discount.setValue(0);
                totalText.setText(Double.toString(total));
            }
        }
        qtyText.requestFocus();
    }//GEN-LAST:event_addbutActionPerformed

    private void removebutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removebutActionPerformed
        int selectedRowCount = itemTable.getSelectedRowCount();
        if (selectedRowCount > 0) {
            int selectedRowIndexies[] = itemTable.getSelectedRows();
            selectedRowIndexies = commonUtil.reverseArray(selectedRowIndexies);
            for (int selectedRowIndex : selectedRowIndexies) {
                String val = (String) itemTable.getValueAt(selectedRowIndex, 5);
                total -= Double.parseDouble(val);
                totalText.setText(Double.toString(total));
                String itemCodeStr = (String) itemTable.getValueAt(selectedRowIndex, 0);
                String qtyString = (String) itemTable.getValueAt(selectedRowIndex, 2);
                itemQtyList.put(itemCodeStr, itemQtyList.get(itemCodeStr) + Integer.parseInt(qtyString));
                ((DefaultTableModel) itemTable.getModel()).removeRow(selectedRowIndex);
            }
        } else {
            JOptionPane.showMessageDialog(lending.this, "Select an Item..", "", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_removebutActionPerformed

    private void itemComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemComboActionPerformed
        if (itemCombo.getSelectedItem() == "Select Item") {
            itemCode.setText("");
            unitPriceText.setText("");
            qtyText.setText("");
            for (int i = rowCount - 1; i >= 0; i--) {
                ((DefaultTableModel) itemTable.getModel()).removeRow(i);
            }
            rowCount = 0;
        } else {
            try {
                itemCode.setText(fillItemCode(itemCombo));
                unitPriceText.setText(fillUnitPriceBox(itemCombo));
                qtyText.requestFocus();
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(lending.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(lending.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_itemComboActionPerformed

    private void qtyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyTextActionPerformed

    private void addCustButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustButActionPerformed
        (lending.this.getDesktopPane()).add(new addCustomer());
        lending.this.toBack();

    }//GEN-LAST:event_addCustButActionPerformed

    private void custNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custNameComboActionPerformed
        if (custNameCombo.getSelectedItem() == "Select Customer") {
            custAddressText.setText("");
            custIDText.setText("");
            for (int i = rowCount - 1; i >= 0; i--) {
                ((DefaultTableModel) itemTable.getModel()).removeRow(i);
            }
            rowCount = 0;
        } else {
            try {
                custAddressText.setText(fillCustAddress(custNameCombo));
                custIDText.setText(fillCustID(custNameCombo));
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(lending.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(lending.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_custNameComboActionPerformed

    private void cancelbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbutActionPerformed
        int res = JOptionPane.showConfirmDialog(lending.this, "Are you sure you want to exit ?", "Select Option", JOptionPane.YES_NO_OPTION);
        if (res == JOptionPane.YES_OPTION) {
            lending.this.dispose();
        }
    }//GEN-LAST:event_cancelbutActionPerformed

    private void savebutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebutActionPerformed
        int rowCount = itemTable.getRowCount();
        if (rowCount == 0 || custNameCombo.getSelectedItem() == "Select Customer") {
            JOptionPane.showMessageDialog(lending.this, "Please Fill All Fields", "Warnning", JOptionPane.WARNING_MESSAGE);
            qtyText.requestFocus();
        } else {
            String custId = custIDText.getText();
            String Date = dateText.getText().substring(4);
            for (int i = 0; i < rowCount; i++) {
                String itemId = (String) itemTable.getValueAt(i, 0);
                int qty = Integer.parseInt((String) itemTable.getValueAt(i, 2));
                int disc = Integer.parseInt((String) itemTable.getValueAt(i, 4));
                int unitPrice = Integer.parseInt((String) itemTable.getValueAt(i, 3));
                lendDetail lenddetail = new lendDetail(custId, itemId, Date, qty, disc, unitPrice);
                try {
                    int res = lendDetailController.addLendDetail(lenddetail);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(lending.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(lending.class.getName()).log(Level.SEVERE, null, ex);
                }

                String dbQty;
                try {
                    dbQty = getQOHtoCompare(itemId);
                    int dbQty1 = Integer.parseInt(dbQty);
                    int res1 = itemController.updateItemQty(dbQty1, qty, itemId);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(lending.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(sellItem.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(lending.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(sellItem.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            for (int i = rowCount - 1; i >= 0; i--) {
                ((DefaultTableModel) itemTable.getModel()).removeRow(i);
            }
            totalText.setText("");
            JOptionPane.showMessageDialog(lending.this, "Added Successfully....");
        }
    }//GEN-LAST:event_savebutActionPerformed

    /**
     * @param args the command line arguments
     */
    private void fillCustomerComboBox() throws SQLException, ClassNotFoundException {
        ArrayList<Customer> customers = customerController.getAllCustomers();
        for (Customer customer : customers) {
            if (((DefaultComboBoxModel) custNameCombo.getModel()).getIndexOf(customer) == -1) {
                custNameCombo.addItem(customer);
            }
        }
    }

    private String fillCustAddress(JComboBox combo) throws SQLException, ClassNotFoundException {
        if (custNameCombo.getSelectedItem() == "Select Customer") {
            return "";
        } else {
            String address = (combo.getSelectedItem()).toString();
            String iCode = getCustAddress(address);
            return iCode;
        }
    }

    private String fillCustID(JComboBox combo) throws SQLException, ClassNotFoundException {
        if (custNameCombo.getSelectedItem() == "Select Customer") {
            return "";
        } else {
            String address = (combo.getSelectedItem()).toString();
            String iCode = getCustID(address);
            return iCode;
        }
    }

    private void fillItemComboBox() throws SQLException, ClassNotFoundException {
        ArrayList<Item> items = itemController.getAllItems();
        for (Item item : items) {
            if (((DefaultComboBoxModel) itemCombo.getModel()).getIndexOf(item) == -1) {
                itemQtyList.put(item.getItemCode(), item.getQtyOnHand());
                itemCombo.addItem(item.toString());
            }
        }
    }

    private String fillItemCode(JComboBox combo) throws SQLException, ClassNotFoundException {
        if (itemCombo.getSelectedItem() == "Select Item") {
            return "";
        } else {
            String itemCodeWithDescription = (combo.getSelectedItem()).toString();
            String description = itemCodeWithDescription.substring(itemCodeWithDescription.indexOf("-") + 2);
            String iCode = getItemDetailsByName(description).getString("item_code");
            return iCode;
        }
    }

    private String fillUnitPriceBox(JComboBox combo) throws SQLException, ClassNotFoundException {
        String itemCodeWithDescription = (combo.getSelectedItem()).toString();
        String description = itemCodeWithDescription.substring(itemCodeWithDescription.indexOf("-") + 2);
        String iCode = getItemDetailsByName(description).getString("selling_price");
        return iCode;
    }

    private String getQOHtoCompare(String ic) throws SQLException, ClassNotFoundException {
        String Qty = getQtyOnHand(ic);
        return Qty;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sellItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sellItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sellItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sellItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lending().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCustBut;
    private javax.swing.JButton addbut;
    private Common.AutoCompletion autoCompletion1;
    private Common.AutoCompletion autoCompletion2;
    private javax.swing.JButton cancelbut;
    private javax.swing.JTextField custAddressText;
    private javax.swing.JTextField custIDText;
    private javax.swing.JComboBox custNameCombo;
    private javax.swing.JTextField dateText;
    private javax.swing.JSpinner discount;
    private javax.swing.JTextField itemCode;
    private javax.swing.JComboBox itemCombo;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField qtyText;
    private javax.swing.JButton removebut;
    private javax.swing.JButton savebut;
    private javax.swing.JTextField totalText;
    private javax.swing.JTextField unitPriceText;
    // End of variables declaration//GEN-END:variables
}
